// **********************************************************************
// Parsed By TafParser(3.2.2.11), Generated By jce2node(20180927)
// TafParser Maintained By <TAF> and jce2node Maintained By <superzheng>
// Generated from "Auth.jce" by Client Mode
// **********************************************************************

/* eslint-disable */

"use strict";

var assert    = require("assert");
var TafStream = require("@tencent/taf-stream");
var TafError  = require("../util/TafError.js").TafError;

var _hasOwnProperty = Object.prototype.hasOwnProperty;

var taf = taf || {};
module.exports.taf = taf;

taf.AuthProxy = function () {
    this._name    = undefined;
    this._worker  = undefined;
};

taf.AuthProxy.prototype.setTimeout = function (iTimeout) {
    this._worker.timeout = iTimeout;
};

taf.AuthProxy.prototype.getTimeout = function () {
    return this._worker.timeout;
};

taf.AuthProxy.prototype.setVersion = function (iVersion) {
    this._worker.version = iVersion;
};

taf.AuthProxy.prototype.getVersion = function () {
    return this._worker.version;
};

taf.AUTH_STATE = {
    "AUTH_INIT" : -127,
    "AUTH_SUCC" : 0,
    "AUTH_WAIT_RSP" : 127,
    "AUTH_PROTO_ERR" : -100,
    "AUTH_WRONG_OBJ" : -101,
    "AUTH_WRONG_AK" : -102,
    "AUTH_WRONG_TIME" : -103,
    "AUTH_NOT_SUPPORT_ENC" : -104,
    "AUTH_DEC_FAIL" : -105,
    "AUTH_ERROR" : -106
};
taf.AUTH_STATE._classname = "taf.AUTH_STATE";
taf.AUTH_STATE._write = function(os, tag, val) { return os.writeInt32(tag, val); };
taf.AUTH_STATE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); };

taf.AUTH_TYPE = {
    "AUTH_TYPENONE" : 0,
    "AUTH_TYPELOCAL" : 1,
    "AUTH_TYPEANONY" : 2
};
taf.AUTH_TYPE._classname = "taf.AUTH_TYPE";
taf.AUTH_TYPE._write = function(os, tag, val) { return os.writeInt32(tag, val); };
taf.AUTH_TYPE._read  = function(is, tag, def) { return is.readInt32(tag, true, def); };

taf.BasicAuthInfo = function() {
    this.sObjName = "";
    this.sAccessKey = "";
    this.sSecretKey = "";
    this.sHashSecretKey2 = "";
    this.sUserData = "";
    this._classname = "taf.BasicAuthInfo";
};
taf.BasicAuthInfo._classname = "taf.BasicAuthInfo";
taf.BasicAuthInfo._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.BasicAuthInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.BasicAuthInfo._readFrom = function (is) {
    var tmp = new taf.BasicAuthInfo;
    tmp.sObjName = is.readString(1, false, "");
    tmp.sAccessKey = is.readString(2, false, "");
    tmp.sSecretKey = is.readString(3, false, "");
    tmp.sHashSecretKey2 = is.readString(4, false, "");
    tmp.sUserData = is.readString(5, false, "");
    return tmp;
};
taf.BasicAuthInfo.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeString(2, this.sAccessKey);
    os.writeString(3, this.sSecretKey);
    os.writeString(4, this.sHashSecretKey2);
    os.writeString(5, this.sUserData);
};
taf.BasicAuthInfo.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.BasicAuthInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.BasicAuthInfo.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "sAccessKey" : this.sAccessKey,
        "sSecretKey" : this.sSecretKey,
        "sHashSecretKey2" : this.sHashSecretKey2,
        "sUserData" : this.sUserData
    };
};
taf.BasicAuthInfo.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "sAccessKey") && (this.sAccessKey = json.sAccessKey);
    _hasOwnProperty.call(json, "sSecretKey") && (this.sSecretKey = json.sSecretKey);
    _hasOwnProperty.call(json, "sHashSecretKey2") && (this.sHashSecretKey2 = json.sHashSecretKey2);
    _hasOwnProperty.call(json, "sUserData") && (this.sUserData = json.sUserData);
    return this;
};
taf.BasicAuthInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.BasicAuthInfo.new = function () {
    return new taf.BasicAuthInfo();
};
taf.BasicAuthInfo.create = function (is) {
    return taf.BasicAuthInfo._readFrom(is);
};

taf.BasicAuthPackage = function() {
    this.sObjName = "";
    this.sAccessKey = "";
    this.iTime = 0;
    this.sHashMethod = "sha1";
    this.sSignature = new TafStream.BinBuffer;
    this._classname = "taf.BasicAuthPackage";
};
taf.BasicAuthPackage._classname = "taf.BasicAuthPackage";
taf.BasicAuthPackage._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.BasicAuthPackage._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.BasicAuthPackage._readFrom = function (is) {
    var tmp = new taf.BasicAuthPackage;
    tmp.sObjName = is.readString(1, true, "");
    tmp.sAccessKey = is.readString(2, true, "");
    tmp.iTime = is.readInt64(3, true, 0);
    tmp.sHashMethod = is.readString(4, false, "sha1");
    tmp.sSignature = is.readBytes(5, false, TafStream.BinBuffer);
    return tmp;
};
taf.BasicAuthPackage.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeString(2, this.sAccessKey);
    os.writeInt64(3, this.iTime);
    os.writeString(4, this.sHashMethod);
    os.writeBytes(5, this.sSignature);
};
taf.BasicAuthPackage.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.BasicAuthPackage.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.BasicAuthPackage.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "sAccessKey" : this.sAccessKey,
        "iTime" : this.iTime,
        "sHashMethod" : this.sHashMethod,
        "sSignature" : this.sSignature.toObject()
    };
};
taf.BasicAuthPackage.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "sAccessKey") && (this.sAccessKey = json.sAccessKey);
    _hasOwnProperty.call(json, "iTime") && (this.iTime = json.iTime);
    _hasOwnProperty.call(json, "sHashMethod") && (this.sHashMethod = json.sHashMethod);
    _hasOwnProperty.call(json, "sSignature") && (this.sSignature.readFromObject(json.sSignature));
    return this;
};
taf.BasicAuthPackage.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.BasicAuthPackage.new = function () {
    return new taf.BasicAuthPackage();
};
taf.BasicAuthPackage.create = function (is) {
    return taf.BasicAuthPackage._readFrom(is);
};

taf.AuthRequest = function() {
    this.sObjName = "";
    this.sRequest = "";
    this.iFd = 0;
    this.iUid = 0;
    this._classname = "taf.AuthRequest";
};
taf.AuthRequest._classname = "taf.AuthRequest";
taf.AuthRequest._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.AuthRequest._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.AuthRequest._readFrom = function (is) {
    var tmp = new taf.AuthRequest;
    tmp.sObjName = is.readString(1, true, "");
    tmp.sRequest = is.readString(2, true, "");
    tmp.iFd = is.readInt32(3, true, 0);
    tmp.iUid = is.readInt64(4, true, 0);
    return tmp;
};
taf.AuthRequest.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeString(2, this.sRequest);
    os.writeInt32(3, this.iFd);
    os.writeInt64(4, this.iUid);
};
taf.AuthRequest.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.AuthRequest.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.AuthRequest.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "sRequest" : this.sRequest,
        "iFd" : this.iFd,
        "iUid" : this.iUid
    };
};
taf.AuthRequest.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "sRequest") && (this.sRequest = json.sRequest);
    _hasOwnProperty.call(json, "iFd") && (this.iFd = json.iFd);
    _hasOwnProperty.call(json, "iUid") && (this.iUid = json.iUid);
    return this;
};
taf.AuthRequest.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.AuthRequest.new = function () {
    return new taf.AuthRequest();
};
taf.AuthRequest.create = function (is) {
    return taf.AuthRequest._readFrom(is);
};

taf.AuthResponse = function() {
    this.iState = 0;
    this.iFd = 0;
    this.iUid = 0;
    this._classname = "taf.AuthResponse";
};
taf.AuthResponse._classname = "taf.AuthResponse";
taf.AuthResponse._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.AuthResponse._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.AuthResponse._readFrom = function (is) {
    var tmp = new taf.AuthResponse;
    tmp.iState = is.readInt32(1, true, 0);
    tmp.iFd = is.readInt32(2, true, 0);
    tmp.iUid = is.readInt64(3, true, 0);
    return tmp;
};
taf.AuthResponse.prototype._writeTo = function (os) {
    os.writeInt32(1, this.iState);
    os.writeInt32(2, this.iFd);
    os.writeInt64(3, this.iUid);
};
taf.AuthResponse.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.AuthResponse.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.AuthResponse.prototype.toObject = function() { 
    return {
        "iState" : this.iState,
        "iFd" : this.iFd,
        "iUid" : this.iUid
    };
};
taf.AuthResponse.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "iState") && (this.iState = json.iState);
    _hasOwnProperty.call(json, "iFd") && (this.iFd = json.iFd);
    _hasOwnProperty.call(json, "iUid") && (this.iUid = json.iUid);
    return this;
};
taf.AuthResponse.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.AuthResponse.new = function () {
    return new taf.AuthResponse();
};
taf.AuthResponse.create = function (is) {
    return taf.AuthResponse._readFrom(is);
};

taf.AkRequest = function() {
    this.vObjName = new TafStream.List(TafStream.String);
    this._classname = "taf.AkRequest";
};
taf.AkRequest._classname = "taf.AkRequest";
taf.AkRequest._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.AkRequest._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.AkRequest._readFrom = function (is) {
    var tmp = new taf.AkRequest;
    tmp.vObjName = is.readList(1, true, TafStream.List(TafStream.String));
    return tmp;
};
taf.AkRequest.prototype._writeTo = function (os) {
    os.writeList(1, this.vObjName);
};
taf.AkRequest.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.AkRequest.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.AkRequest.prototype.toObject = function() { 
    return {
        "vObjName" : this.vObjName.toObject()
    };
};
taf.AkRequest.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "vObjName") && (this.vObjName.readFromObject(json.vObjName));
    return this;
};
taf.AkRequest.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.AkRequest.new = function () {
    return new taf.AkRequest();
};
taf.AkRequest.create = function (is) {
    return taf.AkRequest._readFrom(is);
};

taf.AkResponse = function() {
    this.sObjName = "";
    this.mAkSk = new TafStream.Map(TafStream.String, TafStream.String);
    this._classname = "taf.AkResponse";
};
taf.AkResponse._classname = "taf.AkResponse";
taf.AkResponse._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.AkResponse._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.AkResponse._readFrom = function (is) {
    var tmp = new taf.AkResponse;
    tmp.sObjName = is.readString(1, true, "");
    tmp.mAkSk = is.readMap(2, true, TafStream.Map(TafStream.String, TafStream.String));
    return tmp;
};
taf.AkResponse.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeMap(2, this.mAkSk);
};
taf.AkResponse.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.AkResponse.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.AkResponse.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "mAkSk" : this.mAkSk.toObject()
    };
};
taf.AkResponse.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "mAkSk") && (this.mAkSk.readFromObject(json.mAkSk));
    return this;
};
taf.AkResponse.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.AkResponse.new = function () {
    return new taf.AkResponse();
};
taf.AkResponse.create = function (is) {
    return taf.AkResponse._readFrom(is);
};

taf.SecretRequest = function() {
    this.sObjName = "";
    this.sAccessKey = "";
    this.iSecretLen = 0;
    this._classname = "taf.SecretRequest";
};
taf.SecretRequest._classname = "taf.SecretRequest";
taf.SecretRequest._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.SecretRequest._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.SecretRequest._readFrom = function (is) {
    var tmp = new taf.SecretRequest;
    tmp.sObjName = is.readString(1, true, "");
    tmp.sAccessKey = is.readString(2, true, "");
    tmp.iSecretLen = is.readInt32(3, true, 0);
    return tmp;
};
taf.SecretRequest.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeString(2, this.sAccessKey);
    os.writeInt32(3, this.iSecretLen);
};
taf.SecretRequest.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.SecretRequest.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.SecretRequest.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "sAccessKey" : this.sAccessKey,
        "iSecretLen" : this.iSecretLen
    };
};
taf.SecretRequest.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "sAccessKey") && (this.sAccessKey = json.sAccessKey);
    _hasOwnProperty.call(json, "iSecretLen") && (this.iSecretLen = json.iSecretLen);
    return this;
};
taf.SecretRequest.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.SecretRequest.new = function () {
    return new taf.SecretRequest();
};
taf.SecretRequest.create = function (is) {
    return taf.SecretRequest._readFrom(is);
};

taf.SecretResponse = function() {
    this.sObjName = "";
    this.sAccessKey = "";
    this.sSecretKey = "";
    this._classname = "taf.SecretResponse";
};
taf.SecretResponse._classname = "taf.SecretResponse";
taf.SecretResponse._write = function (os, tag, value) { os.writeStruct(tag, value); };
taf.SecretResponse._read  = function (is, tag, def) { return is.readStruct(tag, true, def); };
taf.SecretResponse._readFrom = function (is) {
    var tmp = new taf.SecretResponse;
    tmp.sObjName = is.readString(1, true, "");
    tmp.sAccessKey = is.readString(2, true, "");
    tmp.sSecretKey = is.readString(3, true, "");
    return tmp;
};
taf.SecretResponse.prototype._writeTo = function (os) {
    os.writeString(1, this.sObjName);
    os.writeString(2, this.sAccessKey);
    os.writeString(3, this.sSecretKey);
};
taf.SecretResponse.prototype._equal = function () {
    assert.fail("this structure not define key operation");
};
taf.SecretResponse.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = "STRUCT" + Math.random();
    }
    return this._proto_struct_name_;
};
taf.SecretResponse.prototype.toObject = function() { 
    return {
        "sObjName" : this.sObjName,
        "sAccessKey" : this.sAccessKey,
        "sSecretKey" : this.sSecretKey
    };
};
taf.SecretResponse.prototype.readFromObject = function(json) { 
    _hasOwnProperty.call(json, "sObjName") && (this.sObjName = json.sObjName);
    _hasOwnProperty.call(json, "sAccessKey") && (this.sAccessKey = json.sAccessKey);
    _hasOwnProperty.call(json, "sSecretKey") && (this.sSecretKey = json.sSecretKey);
    return this;
};
taf.SecretResponse.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
};
taf.SecretResponse.new = function () {
    return new taf.SecretResponse();
};
taf.SecretResponse.create = function (is) {
    return taf.SecretResponse._readFrom(is);
};

var __taf_Auth$applySecret$IF = {
    "name" : "applySecret",
    "return" : "taf.SecretResponse",
    "arguments" : [{
        "name" : "request",
        "class" : "taf.SecretRequest",
        "direction" : "in"
    }]
};

var __taf_Auth$applySecret$IE = function (request) {
    var os = new TafStream.JceOutputStream();
    os.writeStruct(1, request);
    return os.getBinBuffer();
};

var __taf_Auth$applySecret$ID = function (data) {
    try {
        var is = new TafStream.JceInputStream(data.response.sBuffer);
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : is.readStruct(0, true, taf.SecretResponse)
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$applySecret$PE = function (request, __$PROTOCOL$VERSION) {
    var wup = new TafStream.UniAttribute();
    wup.wupVersion = __$PROTOCOL$VERSION;
    wup.writeStruct("request", request);
    return wup;
};

var __taf_Auth$applySecret$PD = function (data) {
    try {
        var wup = data.response.wup;
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : wup.readStruct("", taf.SecretResponse, new taf.SecretResponse)
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$applySecret$ER = function (data) {
    throw {
        "request" : data.request,
        "response" : {
            "costtime" : data.request.costtime,
            "error" : data.error
        }
    }
};

taf.AuthProxy.prototype.applySecret = function (request) {
    var version = this._worker.version;
    if (version === TafStream.Wup.WUP_SIMPLE || version === TafStream.Wup.WUP_COMPLEX) {
        return this._worker.wup_invoke("applySecret", __taf_Auth$applySecret$PE(request, version), arguments[arguments.length - 1], __taf_Auth$applySecret$IF).then(__taf_Auth$applySecret$PD, __taf_Auth$applySecret$ER);
    } else {
        return this._worker.taf_invoke("applySecret", __taf_Auth$applySecret$IE(request), arguments[arguments.length - 1], __taf_Auth$applySecret$IF).then(__taf_Auth$applySecret$ID, __taf_Auth$applySecret$ER);
    }
};
taf.AuthProxy.applySecret = __taf_Auth$applySecret$IF;

var __taf_Auth$authProcess$IF = {
    "name" : "authProcess",
    "return" : "taf.AuthResponse",
    "arguments" : [{
        "name" : "request",
        "class" : "taf.AuthRequest",
        "direction" : "in"
    }]
};

var __taf_Auth$authProcess$IE = function (request) {
    var os = new TafStream.JceOutputStream();
    os.writeStruct(1, request);
    return os.getBinBuffer();
};

var __taf_Auth$authProcess$ID = function (data) {
    try {
        var is = new TafStream.JceInputStream(data.response.sBuffer);
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : is.readStruct(0, true, taf.AuthResponse)
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$authProcess$PE = function (request, __$PROTOCOL$VERSION) {
    var wup = new TafStream.UniAttribute();
    wup.wupVersion = __$PROTOCOL$VERSION;
    wup.writeStruct("request", request);
    return wup;
};

var __taf_Auth$authProcess$PD = function (data) {
    try {
        var wup = data.response.wup;
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : wup.readStruct("", taf.AuthResponse, new taf.AuthResponse)
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$authProcess$ER = function (data) {
    throw {
        "request" : data.request,
        "response" : {
            "costtime" : data.request.costtime,
            "error" : data.error
        }
    }
};

taf.AuthProxy.prototype.authProcess = function (request) {
    var version = this._worker.version;
    if (version === TafStream.Wup.WUP_SIMPLE || version === TafStream.Wup.WUP_COMPLEX) {
        return this._worker.wup_invoke("authProcess", __taf_Auth$authProcess$PE(request, version), arguments[arguments.length - 1], __taf_Auth$authProcess$IF).then(__taf_Auth$authProcess$PD, __taf_Auth$authProcess$ER);
    } else {
        return this._worker.taf_invoke("authProcess", __taf_Auth$authProcess$IE(request), arguments[arguments.length - 1], __taf_Auth$authProcess$IF).then(__taf_Auth$authProcess$ID, __taf_Auth$authProcess$ER);
    }
};
taf.AuthProxy.authProcess = __taf_Auth$authProcess$IF;

var __taf_Auth$refreshAk$IF = {
    "name" : "refreshAk",
    "return" : "list(taf.AkResponse)",
    "arguments" : [{
        "name" : "request",
        "class" : "taf.AkRequest",
        "direction" : "in"
    }]
};

var __taf_Auth$refreshAk$IE = function (request) {
    var os = new TafStream.JceOutputStream();
    os.writeStruct(1, request);
    return os.getBinBuffer();
};

var __taf_Auth$refreshAk$ID = function (data) {
    try {
        var is = new TafStream.JceInputStream(data.response.sBuffer);
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : is.readList(0, true, TafStream.List(taf.AkResponse))
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$refreshAk$PE = function (request, __$PROTOCOL$VERSION) {
    var wup = new TafStream.UniAttribute();
    wup.wupVersion = __$PROTOCOL$VERSION;
    wup.writeStruct("request", request);
    return wup;
};

var __taf_Auth$refreshAk$PD = function (data) {
    try {
        var wup = data.response.wup;
        return {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "return" : wup.readList("", TafStream.List(taf.AkResponse), new TafStream.List(taf.AkResponse))
            }
        };
    } catch (e) {
        throw {
            "request" : data.request,
            "response" : {
                "costtime" : data.request.costtime,
                "error" : {
                    "code" : TafError.CLIENT.DECODE_ERROR,
                    "message" : e.message
                }
            }
        };
    }
};

var __taf_Auth$refreshAk$ER = function (data) {
    throw {
        "request" : data.request,
        "response" : {
            "costtime" : data.request.costtime,
            "error" : data.error
        }
    }
};

taf.AuthProxy.prototype.refreshAk = function (request) {
    var version = this._worker.version;
    if (version === TafStream.Wup.WUP_SIMPLE || version === TafStream.Wup.WUP_COMPLEX) {
        return this._worker.wup_invoke("refreshAk", __taf_Auth$refreshAk$PE(request, version), arguments[arguments.length - 1], __taf_Auth$refreshAk$IF).then(__taf_Auth$refreshAk$PD, __taf_Auth$refreshAk$ER);
    } else {
        return this._worker.taf_invoke("refreshAk", __taf_Auth$refreshAk$IE(request), arguments[arguments.length - 1], __taf_Auth$refreshAk$IF).then(__taf_Auth$refreshAk$ID, __taf_Auth$refreshAk$ER);
    }
};
taf.AuthProxy.refreshAk = __taf_Auth$refreshAk$IF;



