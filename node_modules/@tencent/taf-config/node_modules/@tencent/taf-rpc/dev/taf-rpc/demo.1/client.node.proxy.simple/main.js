process.env.taf_rpc_path = "../../../../";
process.env.taf_stream   = "../../../../../taf-stream";

var comm = require(process.env.taf_rpc_path).Communicator.New();
var TRom = require("./NodeJsCommProxy").TRom;

//初始化通信器
comm.setProperty("locator", "taf.tafregistry.QueryObj@tcp -h 127.0.0.1 -p 17890 -t 10000");

//生成通信代理类
//var prx  = comm.stringToProxy(TRom.NodeJsCommProxy, "TRom.NodeJsTestServer.NodeJsCommObj@udp -h 127.0.0.1 -p 14002 -t 10000");    //测试UDP接口
var prx  = comm.stringToProxy(TRom.NodeJsCommProxy, "TRom.NodeJsTestServer.NodeJsCommObj@tcp -h 127.0.0.1 -p 14002 -t 10000");    //测试TCP接口
//var prx  = comm.stringToProxy(TRom.NodeJsCommProxy, "TRom.NodeJsTestServer.NodeJsCommObj@tcp -h 127.0.0.1 -p 14002 -t 10000:tcp -h 127.0.0.1 -p 14003 -t 10000");
//var prx  = comm.stringToProxy(TRom.NodeJsCommProxy, "TRom.NodeJsTestServer.NodeJsCommObj", "w.sz.1");
prx.setTimeout(2000);
prx.setTimeout(3000);

var index = 0;

var success = function (result) {
    console.log("remote server:",                      result.request.RemoteEndpoint.toString());
    console.log("result.response.costtime:",           result.response.costtime);
    console.log("result.response.context:",            result.response.context);
    console.log("result.response.return: ",            result.response.return);
    console.log("result.response.arguments.sValue1:",  result.response.arguments.sValue1);
    console.log("result.response.arguments.sValue1:",  result.response.arguments.sValue2);


    if (++index == 10) {
        console.log("stop.....");
        comm.disconnect();
    }
};

var error = function (result) {
    console.log("result.response.costtime:",           result.response.costtime);
    console.log("result.response.error.code: ",        result.response.error.code);
    console.log("result.response.error.message: ",     result.response.error.message);
};

//构造附加属性
//dyeing  : tafdyeing.gen(true, "12346"),   //染色
var Property = {
    context : { router : "tx@123",  dcache : "tx@345"   }   //TAF中的context
};

for (var i = 0; i < 10; i++)
{
    prx.getUsrName("kevintian", Property).then(success, error).done();
}