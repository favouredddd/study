// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `./EndpointF.jce'
// **********************************************************************

var taf = require('./QueryF.js').taf;
var tafStream   = require(process.env.taf_stream);
var Endpoint    = require("taf-utils").Endpoint;
var EndpointTaf = require('./EndpointFJce.js').taf;

module.exports.taf = taf;


taf.QueryFImp.prototype.initialize = function ( ) {
    //TODO::

}

taf.QueryFImp.prototype.findObjectById = function (current, id) {
    //TODO::

}

taf.QueryFImp.prototype.findObjectById4Any = function (current, id, activeEp, inactiveEp) {
    //TODO::
    var endpoint1 = new EndpointTaf.EndpointF();
    endpoint1.istcp = 1;
    endpoint1.host  = "127.0.0.1";
    endpoint1.port  = 14200;

    var endpoint2 = new EndpointTaf.EndpointF();
    endpoint1.istcp = 1;
    endpoint1.host  = "127.0.0.1";
    endpoint2.port  = 14201;

    var endpoint3 = newEndpointTaf.EndpointF();
    endpoint1.istcp = 1;
    endpoint1.host  = "127.0.0.1";
    endpoint3.port = 21;

    var endpoint4 = new EndpointTaf.EndpointF();
    endpoint1.istcp = 1;
    endpoint1.host  = "127.0.0.1";
    endpoint4.port = 22;

    var activeArr = tafStream.List(EndpointTaf.EndpointF);
    activeArr.push(endpoint1);
    activeArr.push(endpoint2);

    var inactiveArr = tafStream.List(EndpointTaf.EndpointF);
    activeArr.push(endpoint3);
    activeArr.push(endpoint4);

    current.sendResponse(0, activeArr, inactiveArr);
};

taf.QueryFImp.prototype.findObjectById4All = function (current, id, activeEp, inactiveEp) {
    //TODO::

}

taf.QueryFImp.prototype.findObjectByIdInSameGroup = function (current, id, activeEp, inactiveEp) {
    //TODO::

}

taf.QueryFImp.prototype.findObjectByIdInSameStation = function (current, id, sStation, activeEp, inactiveEp) {
    //TODO::

}

//查找同一个SET中的IPList
var configs = {
    "TRom.NodeJsTestServer.NodeJsCommObj" : [
        { setName:"w.sz.1", endpoint:"tcp -h 127.0.0.1 -p 14002 -t 10000", active:true },
        { setName:"w.sz.1", endpoint:"tcp -h 127.0.0.1 -p 14003 -t 10000", active:true }
    ]
};

taf.QueryFImp.prototype.findObjectByIdInSameSet = function (current, id, setId, activeEp, inactiveEp) {
    console.log('Enter taf.QueryFImp.prototype.findObjectByIdInSameSet::', id, setId);

    var endpoints = configs[id];
    if (endpoints === undefined) {
        current.sendResponse(0, activeEp, inactiveEp);
        return ;
    }

    for (var i = 0; i < endpoints.length; i++) {
        if (setId.length > 0 && endpoints[i].setName !== setId) {
            continue;
        }

        var endpoint  = Endpoint.parse(endpoints[i].endpoint);

        var endpointF = new EndpointTaf.EndpointF();
        endpointF.istcp = endpoint.sProtocol === "tcp"?1:0;
        endpointF.host  = endpoint.sHost;
        endpointF.port  = endpoint.iPort;

        activeEp.push(endpointF);
    }

    current.sendResponse(0, activeEp, inactiveEp);
}
