require("should");
var path = require("path");
var Communicator = require("../../protal.js").Communicator;
var StartAuthServer = require("./mockserver").StartAuthServer;
var TRom = require("./mockserver/NodeTafProxy").TRom;

describe("test-auth", function () {
    this.timeout(0);
    var server, communicator;

    before(function(done) {
        server = StartAuthServer();
        setTimeout(function(){
            done()
        }, 1000)
    })
    after(function() {
        server.stop();
    })
    beforeEach(function() {
        communicator = Communicator.New();
    })

    afterEach(function() {
        communicator.destroy();
    })

    it("1. test rpc auth fail", function () {
        var prx = communicator.stringToProxy(TRom.NodeTafProxy, "TRom.NodeTafServer.NodeTafObj@tcp -h 127.0.0.1 -p 14002");
        prx.testRpcCall("test").should.be.rejected();
    })
    it("2. test rpc auth success", function () {
        communicator.initialize(path.resolve(__dirname ,"./mockserver/TRom.NodeTafServer.config.conf"));
        var prx = communicator.stringToProxy(TRom.NodeTafProxy, "TRom.NodeTafServer.NodeTafObj@tcp -h 127.0.0.1 -p 14002 -e 1");
        prx.testRpcCall("test").should.be.fulfilled();
    })
});


