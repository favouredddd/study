// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.2.2.1 by WSRD Tencent.
// Generated from `/data/NodejsServer/NodejsDeployServer/jce/uploads/1481857276523/in/TafNodeTestServer.jce'
// **********************************************************************

var assert    = require('assert');
var TafStream = require('@tencent/taf-stream');
var TafError  = require('@tencent/taf-rpc').error;

var TafNode = TafNode || {};
module.exports.TafNode = TafNode;


TafNode.TafNodeTestReq = function() {
    this.ip = "";
    this.port = "";
    this.pid = "";
    this._classname = "TafNode.TafNodeTestReq";
};
TafNode.TafNodeTestReq._classname = "TafNode.TafNodeTestReq";

TafNode.TafNodeTestReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
TafNode.TafNodeTestReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TafNode.TafNodeTestReq._readFrom = function (is) {
    var tmp = new TafNode.TafNodeTestReq();
    tmp.ip = is.readString(0, false, "");
    tmp.port = is.readString(1, false, "");
    tmp.pid = is.readString(2, false, "");
    return tmp;
};
TafNode.TafNodeTestReq.prototype._writeTo = function (os) {
    os.writeString(0, this.ip);
    os.writeString(1, this.port);
    os.writeString(2, this.pid);
};
TafNode.TafNodeTestReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TafNode.TafNodeTestReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TafNode.TafNodeTestReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.ip = this.ip;
    tmp.port = this.port;
    tmp.pid = this.pid;
    
    return tmp;
}
TafNode.TafNodeTestReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("ip") || (this.ip = json.ip);
    !json.hasOwnProperty("port") || (this.port = json.port);
    !json.hasOwnProperty("pid") || (this.pid = json.pid);
}
TafNode.TafNodeTestReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TafNode.TafNodeTestReq.new = function () {
    return new TafNode.TafNodeTestReq();
}
TafNode.TafNodeTestReq.create = function (is) {
    return TafNode.TafNodeTestReq._readFrom(is);
}

TafNode.TafNodeTestRsp = function() {
    this.ip = "";
    this.port = "";
    this._classname = "TafNode.TafNodeTestRsp";
};
TafNode.TafNodeTestRsp._classname = "TafNode.TafNodeTestRsp";

TafNode.TafNodeTestRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
TafNode.TafNodeTestRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TafNode.TafNodeTestRsp._readFrom = function (is) {
    var tmp = new TafNode.TafNodeTestRsp();
    tmp.ip = is.readString(0, true, "");
    tmp.port = is.readString(1, true, "");
    return tmp;
};
TafNode.TafNodeTestRsp.prototype._writeTo = function (os) {
    os.writeString(0, this.ip);
    os.writeString(1, this.port);
};
TafNode.TafNodeTestRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TafNode.TafNodeTestRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TafNode.TafNodeTestRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.ip = this.ip;
    tmp.port = this.port;
    
    return tmp;
}
TafNode.TafNodeTestRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("ip") || (this.ip = json.ip);
    !json.hasOwnProperty("port") || (this.port = json.port);
}
TafNode.TafNodeTestRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TafNode.TafNodeTestRsp.new = function () {
    return new TafNode.TafNodeTestRsp();
}
TafNode.TafNodeTestRsp.create = function (is) {
    return TafNode.TafNodeTestRsp._readFrom(is);
}

TafNode.TafNodeTestImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
}

TafNode.TafNodeTestImp.prototype.initialize = function () { 
    //TODO:
}

TafNode.TafNodeTestImp.prototype.onDispatch = function (current, FuncName, BinBuffer) { 
    switch (FuncName) {
        case 'taf_ping': {
                current.sendResponse = function (_ret) {
                        if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX){
                                var wup = new TafStream.UniAttribute();
                                wup.wupVersion = current.getRequestVersion();
                                wup.writeInt32("", _ret);
                                current.doResponse(wup.encode());
                        }else{
                                var os = new TafStream.JceOutputStream();
                                os.writeInt32(0, _ret);
                                current.doResponse(os.getBinBuffer());
                        }
                }
                        current.sendResponse(0);
                return TafError.SUCCESS;
        }
        case 'getServerInfo' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stReq = wup.readStruct("stReq", TafNode.TafNodeTestReq);
                var stRsp = wup.readStruct("stRsp", TafNode.TafNodeTestRsp, new TafNode.TafNodeTestRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stReq = is.readStruct(1, true, TafNode.TafNodeTestReq);
                var stRsp = is.readStruct(2, false, TafNode.TafNodeTestRsp);
            }
            current.sendResponse = function (_ret, stRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stRsp", stRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, stRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getServerInfo(current, stReq, stRsp);

            return TafError.SUCCESS;
        }
    }
    return TafError.SERVER.FUNC_NOT_FOUND;
}

TafNode.TafNodeTestImp.prototype.getServerInfo = function (current, stReq, stRsp) {
    //TODO:
    assert.fail('getServerInfo function not implemented');
}





