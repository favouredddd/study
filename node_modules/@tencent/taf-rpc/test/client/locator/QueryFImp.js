// **********************************************************************
// Parsed By TafParser(3.2.2.20), Generated By jce2node(20190325)
// TafParser Maintained By <TAF> and jce2node Maintained By <superzheng>
// Generated from "QueryF.jce" by Imp Mode
// **********************************************************************

"use strict";

var taf = require("./QueryF.js").taf;
var EndpointF = require("./EndpointFJce.js").taf.EndpointF;
var TafStream = require("@tencent/taf-stream");

module.exports.taf = taf;

taf.QueryFImp.prototype.initialize = function () {
    //TODO::
};

taf.QueryFImp.prototype.findObjectById = function (current, id) {
    //TODO::
};

taf.QueryFImp.prototype.findObjectById4Any = function (current, id, activeEp, inactiveEp) {
    //TODO::
};

taf.QueryFImp.prototype.findObjectById4All = function (current, id, activeEp, inactiveEp) {
    //TODO::
};

taf.QueryFImp.prototype.findObjectByIdInSameGroup = function (current, id, activeEp, inactiveEp) {
    activeEp = TafStream.List(EndpointF);
    inactiveEp = TafStream.List(EndpointF);
    var endpoint1 = new EndpointF(), endpoint2 = new EndpointF(), endpoint3 = new EndpointF();
    endpoint1.readFromObject({
        host: "127.0.0.1",
        port: 14002,
        timeout: 10000,
        istcp: 1
    });
    endpoint2.readFromObject({
        host: "127.0.0.1",
        port: 14003,
        timeout: 10000,
        istcp: 1
    });
    endpoint3.readFromObject({
        host: "127.0.0.1",
        port: 15000,
        timeout: 10000,
        istcp: 1
    });
    activeEp.push(endpoint1);
    activeEp.push(endpoint2);
    inactiveEp.push(endpoint3);
    current.sendResponse(0, activeEp, inactiveEp);
};

taf.QueryFImp.prototype.findObjectByIdInSameStation = function (current, id, sStation, activeEp, inactiveEp) {
    //TODO::
};

taf.QueryFImp.prototype.findObjectByIdInSameSet = function (current, id, setId, activeEp, inactiveEp) {
    //TODO::
};


