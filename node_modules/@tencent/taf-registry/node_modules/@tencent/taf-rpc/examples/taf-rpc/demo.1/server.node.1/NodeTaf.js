// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `./NodeTaf.jce'
// **********************************************************************

var assert    = require('assert');
var TafStream = require('../../../../../taf-stream');
var TafError  = require("../../../../protal.js").error;

var TRom = TRom || {};
module.exports.TRom = TRom;

TRom.User_t = function() {
    this.id = 0;
    this.score = 0;
    this.name = "";
    this._classname = "TRom.User_t";
};
TRom.User_t._classname = "TRom.User_t";

TRom.User_t._write = function (os, tag, value) { os.writeStruct(tag, value); }
TRom.User_t._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TRom.User_t._readFrom = function (is) {
    var tmp = new TRom.User_t();
    tmp.id = is.readInt32(0, false, 0);
    tmp.score = is.readInt32(1, false, 0);
    tmp.name = is.readString(2, false, "");
    return tmp;
};
TRom.User_t.prototype._writeTo = function (os) {
    os.writeInt32(0, this.id);
    os.writeInt32(1, this.score);
    os.writeString(2, this.name);
};
TRom.User_t.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TRom.User_t.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TRom.User_t.prototype.toObject = function() { 
    var tmp = {};

    tmp.id = this.id;
    tmp.score = this.score;
    tmp.name = this.name;
    
    return tmp;
}
TRom.User_t.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("id") || (this.id = json.id);
    !json.hasOwnProperty("score") || (this.score = json.score);
    !json.hasOwnProperty("name") || (this.name = json.name);
}
TRom.User_t.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TRom.User_t.new = function () {
    return new TRom.User_t();
}
TRom.User_t.create = function (is) {
    return TRom.User_t._readFrom(is);
}
TRom.Result_t = function() {
    this.id = 0;
    this.iLevel = 0;
    this._classname = "TRom.Result_t";
};
TRom.Result_t._classname = "TRom.Result_t";

TRom.Result_t._write = function (os, tag, value) { os.writeStruct(tag, value); }
TRom.Result_t._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TRom.Result_t._readFrom = function (is) {
    var tmp = new TRom.Result_t();
    tmp.id = is.readInt32(0, false, 0);
    tmp.iLevel = is.readInt32(1, false, 0);
    return tmp;
};
TRom.Result_t.prototype._writeTo = function (os) {
    os.writeInt32(0, this.id);
    os.writeInt32(1, this.iLevel);
};
TRom.Result_t.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TRom.Result_t.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TRom.Result_t.prototype.toObject = function() { 
    var tmp = {};

    tmp.id = this.id;
    tmp.iLevel = this.iLevel;
    
    return tmp;
}
TRom.Result_t.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("id") || (this.id = json.id);
    !json.hasOwnProperty("iLevel") || (this.iLevel = json.iLevel);
}
TRom.Result_t.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TRom.Result_t.new = function () {
    return new TRom.Result_t();
}
TRom.Result_t.create = function (is) {
    return TRom.Result_t._readFrom(is);
}


TRom.User_t = function() {
    this.id = 0;
    this.score = 0;
    this.name = "";
    this._classname = "TRom.User_t";
};
TRom.User_t._classname = "TRom.User_t";

TRom.User_t._write = function (os, tag, value) { os.writeStruct(tag, value); }
TRom.User_t._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TRom.User_t._readFrom = function (is) {
    var tmp = new TRom.User_t();
    tmp.id = is.readInt32(0, false, 0);
    tmp.score = is.readInt32(1, false, 0);
    tmp.name = is.readString(2, false, "");
    return tmp;
};
TRom.User_t.prototype._writeTo = function (os) {
    os.writeInt32(0, this.id);
    os.writeInt32(1, this.score);
    os.writeString(2, this.name);
};
TRom.User_t.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TRom.User_t.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TRom.User_t.prototype.toObject = function() { 
    var tmp = {};

    tmp.id = this.id;
    tmp.score = this.score;
    tmp.name = this.name;
    
    return tmp;
}
TRom.User_t.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("id") || (this.id = json.id);
    !json.hasOwnProperty("score") || (this.score = json.score);
    !json.hasOwnProperty("name") || (this.name = json.name);
}
TRom.User_t.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TRom.User_t.new = function () {
    return new TRom.User_t();
}
TRom.User_t.create = function (is) {
    return TRom.User_t._readFrom(is);
}

TRom.Result_t = function() {
    this.id = 0;
    this.iLevel = 0;
    this._classname = "TRom.Result_t";
};
TRom.Result_t._classname = "TRom.Result_t";

TRom.Result_t._write = function (os, tag, value) { os.writeStruct(tag, value); }
TRom.Result_t._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
TRom.Result_t._readFrom = function (is) {
    var tmp = new TRom.Result_t();
    tmp.id = is.readInt32(0, false, 0);
    tmp.iLevel = is.readInt32(1, false, 0);
    return tmp;
};
TRom.Result_t.prototype._writeTo = function (os) {
    os.writeInt32(0, this.id);
    os.writeInt32(1, this.iLevel);
};
TRom.Result_t.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
TRom.Result_t.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
TRom.Result_t.prototype.toObject = function() { 
    var tmp = {};

    tmp.id = this.id;
    tmp.iLevel = this.iLevel;
    
    return tmp;
}
TRom.Result_t.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("id") || (this.id = json.id);
    !json.hasOwnProperty("iLevel") || (this.iLevel = json.iLevel);
}
TRom.Result_t.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
TRom.Result_t.new = function () {
    return new TRom.Result_t();
}
TRom.Result_t.create = function (is) {
    return TRom.Result_t._readFrom(is);
}

TRom.NodeTafImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
}

TRom.NodeTafImp.prototype.initialize = function () { 
    //TODO:
}

TRom.NodeTafImp.prototype.onDispatch = function (current, FuncName, BinBuffer) { 
    switch (FuncName) {
        case 'getUsrName' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var sUsrName = wup.readString("sUsrName");
                var sValue1 = wup.readString("sValue1", "");
                var sValue2 = wup.readString("sValue2", "");
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var sUsrName = is.readString(1, true);
                var sValue1 = is.readString(2, false);
                var sValue2 = is.readString(3, false);
            }
            current.sendResponse = function (_ret, sValue1, sValue2) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeString("sValue1", sValue1);
                    wup.writeString("sValue2", sValue2);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeString(2, sValue1);
                    os.writeString(3, sValue2);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getUsrName(current, sUsrName, sValue1, sValue2);

            return TafError.SUCCESS;
        }
        case 'getall' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stUser = wup.readStruct("stUser", TRom.User_t);
                var stResult = wup.readStruct("stResult", TRom.Result_t, new TRom.Result_t());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stUser = is.readStruct(1, true, TRom.User_t);
                var stResult = is.readStruct(2, false, TRom.Result_t);
            }
            current.sendResponse = function (_ret, stResult) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stResult", stResult);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, stResult);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getall(current, stUser, stResult);

            return TafError.SUCCESS;
        }
        case 'test' : {
            current.sendResponse = function (_ret) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.test(current);

            return TafError.SUCCESS;
        }
    }
    return TafError.SERVER.FUNC_NOT_FOUND;
}

TRom.NodeTafImp.prototype.getUsrName = function (current, sUsrName, sValue1, sValue2) {
    //TODO:
    assert.fail('getUsrName function not implemented');
}

TRom.NodeTafImp.prototype.getall = function (current, stUser, stResult) {
    //TODO:
    assert.fail('getall function not implemented');
}

TRom.NodeTafImp.prototype.test = function (current) {
    //TODO:
    assert.fail('test function not implemented');
}





