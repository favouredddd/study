var net  = require("net");
var Taf  = require('../../../../../taf-stream');
var TRom = require("./NodeTafJce.js").TRom;

var socket = new net.Socket();
socket.connect(14002, "127.0.0.1");

socket.on("connect", function () {
    var wup = new Taf.Wup();
    wup.wupVersion  = Taf.Wup.WUP_COMPLEX;
    wup.servantName = "TRom.NodeTafServer.NodeTafObj";
    wup.funcName    = "getUsrName";

    wup._iRequestId = 1111;

    wup.writeString("sUsrName", "KevinTian@tencent.com");
    wup.writeString("sValue1",  "KevinTian-1");
    wup.writeString("sValue2",  "KevinTian-1");

    var buf = wup.encode();

    socket.write(buf.toNodeBuffer());
});

socket.on("data", function(data) {
    var wup  = new Taf.Wup();
    wup.decode(new Taf.BinBuffer(new Buffer(data)));

    var iTafResultCode = wup.getTafResultCode(); // *****在进行其他逻辑之前，需要判断下TAF框架的错误码，务必要做此步*****
    if (iTafResultCode !== 0) { //如果不为0，则表示还没有执行对应的函数
        console.log("TAF ERROR CODE:",    wup.getTafResultCode());
        console.log("TAF ERROR MESSAGE:", wup.getTafResultDesc());
    } else {
        console.log("result.response.return:",            wup.readInt32(""));
        console.log("result.response.arguments.sValue1:", wup.readString("sValue1"));
        console.log("result.response.arguments.sValue2:", wup.readString("sValue2"));
    }
});

socket.on("close", function() {
    console.log("peer endpoint close this connection");
});

socket.on("error", function() {
    console.log("connection error");
});
