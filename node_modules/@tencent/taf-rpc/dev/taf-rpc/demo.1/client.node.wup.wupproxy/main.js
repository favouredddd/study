process.env.taf_rpc_path = "../../../../taf-rpc";
process.env.taf_stream   = "../../../../taf-stream";

var TRom = require("./NodeJsCommProxy.js").TRom;
var Taf  = require(process.env.taf_stream);
var http = require("http");

//组织请求数据
var wup = new Taf.Wup();
wup.wupVersion  = Taf.Wup.WUP_COMPLEX;
wup.servantName = "testnode";
wup.funcName    = "getUsrName";
wup.writeString("sUsrName", "11111");
wup.writeString("sValue1",  "22222");
wup.writeString("sValue2",  "33333");

//发送请求数据
var binBuffer = wup.encode();
var postData  = binBuffer.toNodeBuffer();

var options = {
    hostname : '114.80.102.180',
    port     : 55555,
    path     : '/',
    method   : 'POST',
    headers  : {
        'Content-Type': 'application/octet-stream',
        'Content-Length': postData.length
    }
};

var req = http.request(options, function(res) {
    //console.log('STATUS: ' + res.statusCode);
    //console.log('HEADERS: ' + JSON.stringify(res.headers));

    res.on('data', function (chunk) {
        var data = new Taf.BinBuffer(new Buffer(chunk));
        var dd   = new Taf.Wup();
        dd.decode(data);

        console.log("sValue1:", dd.readString("sValue1"));
        console.log("sValue2:", dd.readString("sValue2"));
    });
});

req.on('error', function(e) {
    console.log('problem with request: ' + e.message);
});

req.write(postData);
req.end();
