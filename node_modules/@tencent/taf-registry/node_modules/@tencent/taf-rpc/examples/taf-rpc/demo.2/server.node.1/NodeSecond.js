// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.1.1.2 by WSRD Tencent.
// Generated from `./NodeSecond.jce'
// **********************************************************************

var assert    = require('assert');
var TafStream = require('../../../../../taf-stream');
var TafError  = require("../../../../protal.js").error;

var TRom = TRom || {};
module.exports.TRom = TRom;


TRom.NodeSecondImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
}

TRom.NodeSecondImp.prototype.initialize = function () { 
    //TODO:
}

TRom.NodeSecondImp.prototype.onDispatch = function (current, FuncName, BinBuffer) { 
    switch (FuncName) {
        case 'test' : {
            current.sendResponse = function (_ret) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.test(current);

            return TafError.SUCCESS;
        }
        case 'yourName' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var sName = wup.readString("sName");
                var sUserName = wup.readString("sUserName", "");
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var sName = is.readString(1, true);
                var sUserName = is.readString(2, false);
            }
            current.sendResponse = function (_ret, sUserName) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeString("", _ret);
                    wup.writeString("sUserName", sUserName);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeString(0, _ret);
                    os.writeString(2, sUserName);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.yourName(current, sName, sUserName);

            return TafError.SUCCESS;
        }
    }
    return TafError.SERVER.FUNC_NOT_FOUND;
}

TRom.NodeSecondImp.prototype.test = function (current) {
    //TODO:
    assert.fail('test function not implemented');
}

TRom.NodeSecondImp.prototype.yourName = function (current, sName, sUserName) {
    //TODO:
    assert.fail('yourName function not implemented');
}





