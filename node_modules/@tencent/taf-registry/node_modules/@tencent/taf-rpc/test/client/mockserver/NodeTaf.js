// **********************************************************************
// Parsed By TafParser(3.2.2.20), Generated By jce2node(20190325)
// TafParser Maintained By <TAF> and jce2node Maintained By <superzheng>
// Generated from "NodeTaf.jce" by Server Mode
// **********************************************************************

/* eslint-disable */

"use strict";

var assert    = require("assert");
var TafStream = require("@tencent/taf-stream");
var TafError  = require("@tencent/taf-rpc").error;

var TRom = TRom || {};
module.exports.TRom = TRom;

TRom.NodeTafImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
};

TRom.NodeTafImp.prototype.initialize = function () {};

TRom.NodeTafImp.prototype.onDispatch = function (current, funcName, binBuffer) { 
    if ("__" + funcName in this) {
        return this["__" + funcName](current, binBuffer);
    } else {
        return TafError.SERVER.FUNC_NOT_FOUND;
    }
};

var __TRom_NodeTaf$taf_ping$RE = function (_ret) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

TRom.NodeTafImp.prototype.__taf_ping = function (current) {
    __TRom_NodeTaf$taf_ping$RE.call(current, 0);

    return TafError.SUCCESS;
};

TRom.NodeTafImp.prototype.test = function () {
    assert.fail("test function not implemented");
};

var __TRom_NodeTaf$test$RE = function (_ret) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

TRom.NodeTafImp.prototype.__test = function (current) {
    current.sendResponse = __TRom_NodeTaf$test$RE;

    this.test(current);

    return TafError.SUCCESS;
};

TRom.NodeTafImp.prototype.testRpcCall = function () {
    assert.fail("testRpcCall function not implemented");
};

var __TRom_NodeTaf$testRpcCall$RE = function (_ret, sValue) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeString("sValue", sValue);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeString(2, sValue);

        this.doResponse(os.getBinBuffer());
    }
};

TRom.NodeTafImp.prototype.__testRpcCall = function (current, binBuffer) {
    var sUsrName = null;
    var sValue = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        sUsrName = wup.readString("sUsrName");
        sValue = wup.readString("sValue", "");
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        sUsrName = is.readString(1, true, "");
        sValue = is.readString(2, false, "");
    }

    current.sendResponse = __TRom_NodeTaf$testRpcCall$RE;

    this.testRpcCall(current, sUsrName, sValue);

    return TafError.SUCCESS;
};

TRom.NodeTafImp.prototype.testContext = function () {
    assert.fail("testContext function not implemented");
};

var __TRom_NodeTaf$testContext$RE = function (_ret) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

TRom.NodeTafImp.prototype.__testContext = function (current) {
    current.sendResponse = __TRom_NodeTaf$testContext$RE;

    this.testContext(current);

    return TafError.SUCCESS;
};





