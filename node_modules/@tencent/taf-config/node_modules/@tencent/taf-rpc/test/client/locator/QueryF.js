// **********************************************************************
// Parsed By TafParser(3.2.2.20), Generated By jce2node(20190325)
// TafParser Maintained By <TAF> and jce2node Maintained By <superzheng>
// Generated from "QueryF.jce" by Server Mode
// **********************************************************************

/* eslint-disable */

"use strict";

var assert    = require("assert");
var TafStream = require("@tencent/taf-stream");
var TafError  = require("@tencent/taf-rpc").error;
var _TAF_MODULE_A_ = require("./EndpointFJce.js");

var taf = taf || {};
module.exports.taf = taf;

taf.QueryFImp = function () {
    this._name   = undefined;
    this._worker = undefined;
};

taf.QueryFImp.prototype.initialize = function () {};

taf.QueryFImp.prototype.onDispatch = function (current, funcName, binBuffer) {
    if ("__" + funcName in this) {
        return this["__" + funcName](current, binBuffer);
    } else {
        return TafError.SERVER.FUNC_NOT_FOUND;
    }
};

var __taf_QueryF$taf_ping$RE = function (_ret) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__taf_ping = function (current) {
    __taf_QueryF$taf_ping$RE.call(current, 0);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectById = function () {
    assert.fail("findObjectById function not implemented");
};

var __taf_QueryF$findObjectById$RE = function (_ret) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeList("", _ret);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeList(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectById = function (current, binBuffer) {
    var id = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
    }

    current.sendResponse = __taf_QueryF$findObjectById$RE;

    this.findObjectById(current, id);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectById4Any = function () {
    assert.fail("findObjectById4Any function not implemented");
};

var __taf_QueryF$findObjectById4Any$RE = function (_ret, activeEp, inactiveEp) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeList("activeEp", activeEp);
        wup.writeList("inactiveEp", inactiveEp);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeList(2, activeEp);
        os.writeList(3, inactiveEp);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectById4Any = function (current, binBuffer) {
    var id = null;
    var activeEp = null;
    var inactiveEp = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
        activeEp = wup.readList("activeEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = wup.readList("inactiveEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
        activeEp = is.readList(2, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = is.readList(3, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    }

    current.sendResponse = __taf_QueryF$findObjectById4Any$RE;

    this.findObjectById4Any(current, id, activeEp, inactiveEp);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectById4All = function () {
    assert.fail("findObjectById4All function not implemented");
};

var __taf_QueryF$findObjectById4All$RE = function (_ret, activeEp, inactiveEp) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeList("activeEp", activeEp);
        wup.writeList("inactiveEp", inactiveEp);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeList(2, activeEp);
        os.writeList(3, inactiveEp);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectById4All = function (current, binBuffer) {
    var id = null;
    var activeEp = null;
    var inactiveEp = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
        activeEp = wup.readList("activeEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = wup.readList("inactiveEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
        activeEp = is.readList(2, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = is.readList(3, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    }

    current.sendResponse = __taf_QueryF$findObjectById4All$RE;

    this.findObjectById4All(current, id, activeEp, inactiveEp);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectByIdInSameGroup = function () {
    assert.fail("findObjectByIdInSameGroup function not implemented");
};

var __taf_QueryF$findObjectByIdInSameGroup$RE = function (_ret, activeEp, inactiveEp) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeList("activeEp", activeEp);
        wup.writeList("inactiveEp", inactiveEp);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeList(2, activeEp);
        os.writeList(3, inactiveEp);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectByIdInSameGroup = function (current, binBuffer) {
    var id = null;
    var activeEp = null;
    var inactiveEp = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
        activeEp = wup.readList("activeEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = wup.readList("inactiveEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
        activeEp = is.readList(2, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = is.readList(3, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    }

    current.sendResponse = __taf_QueryF$findObjectByIdInSameGroup$RE;

    this.findObjectByIdInSameGroup(current, id, activeEp, inactiveEp);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectByIdInSameStation = function () {
    assert.fail("findObjectByIdInSameStation function not implemented");
};

var __taf_QueryF$findObjectByIdInSameStation$RE = function (_ret, activeEp, inactiveEp) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeList("activeEp", activeEp);
        wup.writeList("inactiveEp", inactiveEp);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeList(3, activeEp);
        os.writeList(4, inactiveEp);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectByIdInSameStation = function (current, binBuffer) {
    var id = null;
    var sStation = null;
    var activeEp = null;
    var inactiveEp = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
        sStation = wup.readString("sStation");
        activeEp = wup.readList("activeEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = wup.readList("inactiveEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
        sStation = is.readString(2, true, "");
        activeEp = is.readList(3, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = is.readList(4, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    }

    current.sendResponse = __taf_QueryF$findObjectByIdInSameStation$RE;

    this.findObjectByIdInSameStation(current, id, sStation, activeEp, inactiveEp);

    return TafError.SUCCESS;
};

taf.QueryFImp.prototype.findObjectByIdInSameSet = function () {
    assert.fail("findObjectByIdInSameSet function not implemented");
};

var __taf_QueryF$findObjectByIdInSameSet$RE = function (_ret, activeEp, inactiveEp) {
    if (this.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || this.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = this.getRequestVersion();
        wup.writeInt32("", _ret);
        wup.writeList("activeEp", activeEp);
        wup.writeList("inactiveEp", inactiveEp);

        this.doResponse(wup.encode());
    } else {
        var os = new TafStream.JceOutputStream();
        os.writeInt32(0, _ret);
        os.writeList(3, activeEp);
        os.writeList(4, inactiveEp);

        this.doResponse(os.getBinBuffer());
    }
};

taf.QueryFImp.prototype.__findObjectByIdInSameSet = function (current, binBuffer) {
    var id = null;
    var setId = null;
    var activeEp = null;
    var inactiveEp = null;

    if (current.getRequestVersion() === TafStream.Wup.WUP_SIMPLE || current.getRequestVersion() === TafStream.Wup.WUP_COMPLEX) {
        var wup = new TafStream.UniAttribute();
        wup.wupVersion = current.getRequestVersion();
        wup.decode(binBuffer);
        id = wup.readString("id");
        setId = wup.readString("setId");
        activeEp = wup.readList("activeEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = wup.readList("inactiveEp", TafStream.List(_TAF_MODULE_A_.taf.EndpointF), new TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    } else {
        var is = new TafStream.JceInputStream(binBuffer);
        id = is.readString(1, true, "");
        setId = is.readString(2, true, "");
        activeEp = is.readList(3, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
        inactiveEp = is.readList(4, false, TafStream.List(_TAF_MODULE_A_.taf.EndpointF));
    }

    current.sendResponse = __taf_QueryF$findObjectByIdInSameSet$RE;

    this.findObjectByIdInSameSet(current, id, setId, activeEp, inactiveEp);

    return TafError.SUCCESS;
};





